# -*- coding: utf-8 -*-
"""ST4.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1RNJlmkCmt7iJYTYdYtHFJmPiljturhHY
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import math
import statsmodels.api as sm

df = pd.read_csv('/Mall_Customers.csv')
df.head()

df = df.drop(['CustomerID'], axis=1)
df.head()

df2 = pd.DataFrame({})
df2.head()

"""## Modelo Lineal Multiple


"""

df2 = pd.get_dummies(df, columns=['Gender'], drop_first=True)
df2.head()

"""Lineal"""

# X = df2[['Source', 'Studios']]
X = df2[['Annual Income (k$)', 'Spending Score (1-100)','Gender_Male']]
Y = df2['Age']

X = sm.add_constant(X)
X = sm.add_constant(X)   # se agrega la intercepción, la ordenada al origen (beta_0) el modelo
modelo = sm.OLS(Y, X).fit()
predictions = modelo.predict(X)  # Con el modelo, se calculan las Y´s

modelo.summary()

X = df2[['Annual Income (k$)']]
Y = df2['Age']

from sklearn.model_selection import train_test_split

x_train, x_test, y_train, y_test = train_test_split(X, Y, test_size = 1/3) 

from sklearn.linear_model import LinearRegression 
from sklearn.linear_model import LogisticRegression

lr = LinearRegression()
lr.fit(x_train, y_train)

X = sm.add_constant(X)
X = sm.add_constant(X)   # se agrega la intercepción, la ordenada al origen (beta_0) el modelo
modelo = sm.OLS(Y, X).fit()
predictions = modelo.predict(X)  # Con el modelo, se calculan las Y´s

plt.scatter(x_train, y_train, color = "red")  # diagrama de dispersión para trazar las observaciones reales
plt.plot(x_train, lr.predict(x_train), color = "green") # Para la línea de regresión, se usa x_train en el eje x y las predicciones de las observaciones en el eje y.
plt.title("Annual Income (k$) vs Age")
plt.xlabel("Annual Income")
plt.ylabel("Age")
plt.show()

X = df2[['Spending Score (1-100)']]
Y = df2['Age']

from sklearn.model_selection import train_test_split

x_train, x_test, y_train, y_test = train_test_split(X, Y, test_size = 1/3) 

from sklearn.linear_model import LinearRegression 
from sklearn.linear_model import LogisticRegression

lr = LinearRegression()
lr.fit(x_train, y_train)

X = sm.add_constant(X)
X = sm.add_constant(X)   # se agrega la intercepción, la ordenada al origen (beta_0) el modelo
modelo = sm.OLS(Y, X).fit()
predictions = modelo.predict(X)  # Con el modelo, se calculan las Y´s

plt.scatter(x_train, y_train, color = "red")  # diagrama de dispersión para trazar las observaciones reales
plt.plot(x_train, lr.predict(x_train), color = "green") # Para la línea de regresión, se usa x_train en el eje x y las predicciones de las observaciones en el eje y.
plt.title("Spending Score (1-100) vs Age")
plt.xlabel("Spending Score")
plt.ylabel("Age")
plt.show()

X = df2[['Gender_Male']]
Y = df2['Age']

from sklearn.model_selection import train_test_split

x_train, x_test, y_train, y_test = train_test_split(X, Y, test_size = 1/3) 

from sklearn.linear_model import LinearRegression 
from sklearn.linear_model import LogisticRegression

lr = LinearRegression()
lr.fit(x_train, y_train)

X = sm.add_constant(X)
X = sm.add_constant(X)   # se agrega la intercepción, la ordenada al origen (beta_0) el modelo
modelo = sm.OLS(Y, X).fit()
predictions = modelo.predict(X)  # Con el modelo, se calculan las Y´s

plt.scatter(x_train, y_train, color = "red")  # diagrama de dispersión para trazar las observaciones reales
plt.plot(x_train, lr.predict(x_train), color = "green") # Para la línea de regresión, se usa x_train en el eje x y las predicciones de las observaciones en el eje y.
plt.title("Gender_Male vs Age")
plt.xlabel("Gender_Male")
plt.ylabel("Age")
plt.show()



"""¿Cuántos intentos o corridas realizaste para obtener los resultados sin errores? Porqué

- Varios intentos, debido a que habían elementos en la tabla de tipo
string, y tuvimos que convertirlos a binario o a int.

¿Cómo los resolviste los problemas que se presentaron?

- Investigando en internet, y comparando cada variable independiente individualmente para obtener una mejor visualización de la regresión múltiple.

¿Qué resultados arrojó el análisis? Incluye imagen de cada resultado y explica cada uno de los resultados:
Estadística descriptiva
Coeficientes de regresión
Valores actuales y de predicción
Coeficiente de determinación r2
Gráficas

- El análisis arrojó que existe una gran dispersión de datos al utilizar la edad como variable dependiente en nuestro estudio, por lo tanto, no hay una correlación certera utilizando estas variables. Gracias a esto, podemos darnos cuenta de que utilizando K-means, podríamos hayar la correlación entre grupos de dichas variables.

¿Cuáles son tus conclusiones de la modelación?
Sigue el formato pregunta-respuesta.

- Para este dataset, hubiese sido mejor hacer un análisis con K-means, puesto que utilizando regresión lineal múltiple obtuvimos datos sesgados que no presentan una correlación exitosa entre sí.
"""